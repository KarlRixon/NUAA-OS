本次作业提交的截止期是2019/4/22上午9点。
提交须包括：简单说明（包含解决问题的思路，以及编译你的程序的方法），程序源代码以及可执行文件，
请打包成 2019OS_hw1_xxxx.tar.gz 发送给相应的助教(注：xxxx是你的学号)。

1,2两个班同学请发给 孙雪 1217016581@qq.com
3,4两个班同学请发给 滕美艳 956958419@qq.com

Linux命令行打包命令如下：
tar cvfz 2019OS_hw1_xxxx.tar.gz 2019OS_hw1
其中，xxxx是你的学号，2019OS_hw1是文件所在的文件夹。

同学们如果有什么问题，请直接和我联系！

===========================================

本课程中的作业要求同学们可以访问Linux平台。如果你已经运行Linux, 请跳过作业0。

作业0: 
此作业将指导你完成设置自己Linux环境所需遵循的步骤。
1. 下载VirtualBox
https://www.virtualbox.org/
2. 下载Ubuntu 18.04
https://www.ubuntu.com/download/desktop
3. 基于VirtualBox安装Ubuntu（网上有相关教程）

作业1:
Fibonacci序列是一组数：0，1，1，2，3，5，8，...，它可以表达为：
fib(0) = 0
fib(1) = 1
fib(n) = fib(n-1) + fib(n-2)
使用fork()编写一个程序，接受用户在命令行中输入一个数字n，输出Fibonacci序列中的前n个数。
要求：使用shmget在父进程与子进程之间建立一个共享内存段，允许子进程将Fibonacci序列的内容写入共享内存段，父进程等待子进程，当子进程完成后，父进程输出Fibonacci序列。参考步骤如下：
a.接受命令行上传递的参数，执行错误检查
b.创建一个共享内存段
c.将共享内存连接到地址空间
d.创建子进程，调用wait()等待子进程结束
e.子进程计算fibonacci序列，写入共享内存，最后断开此区域
f.父进程在终端上输出共享内存段中的fibonacci序列的值
g.断开并删除内存共享段

作业2:
用pthread编写一个多线程程序来输出素数。程序应该这样工作：用户输入运行程序时在命令行输入一个数字，然后输出小于或等于用户输入数的所有素数。请大家思考一下如何利用多线程提高计算速度，希望越快越好

注1：不可以在程序中预存结果，最后会公布各位同学程序运行速度的排名
注2: 要求从小到大顺序输出所有素数，输入数值不会超过32位整型值

作业3:
解决我们在课堂上学到的读者和写者问题中有利于读者, 可能会让写者饿死的情况。为读者和写者的问题提供另一种有利于写者的解决方案, 即一旦写者等待写入共享数据, 就不会有新的读者开始阅读。使用线程同步编写解决方案。可以自由地使用锁、信号量等来实现。

注：程序运行时应该提示用户输入读者写者的数目，以及每位读者写者的到达时刻和读写用时（假设单位为秒），例如

读者数目： 2
写者数目： 2
读者1：0 4
读者2：3 5
写者1：2 6
写者2：4 7

每位读者写者开始读写时，应输出相应字符串：“reader x is reading”或”writer x is writing”，
结束时输出：”reader x is leaving”或“writer x is leaving”
其中，x是ID